name: Build and Push Spilo

on:
  push:
    branches:
      - spilo-migration
    tags:
      - 'spilo-v*'
  pull_request:
    branches: [main]
    paths:
      - 'Dockerfile.spilo'
      - 'migrations/**'
      - 'scripts/supabase_post_init.sh'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract version info
        id: version
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/spilo-v* ]]; then
            VERSION=${GITHUB_REF#refs/tags/spilo-v}
            # Split on first dash only: 17-4.0-p3 -> PG=17, SPILO=4.0-p3
            PG_VERSION=$(echo $VERSION | cut -d- -f1)
            SPILO_VERSION=$(echo $VERSION | cut -d- -f2-)
            echo "pg_version=${PG_VERSION}" >> $GITHUB_OUTPUT
            echo "spilo_version=${SPILO_VERSION:-4.0-p3}" >> $GITHUB_OUTPUT
            echo "full_version=${VERSION}" >> $GITHUB_OUTPUT
            echo "is_tag=true" >> $GITHUB_OUTPUT
          else
            echo "pg_version=17" >> $GITHUB_OUTPUT
            echo "spilo_version=4.0-p3" >> $GITHUB_OUTPUT
            echo "full_version=dev" >> $GITHUB_OUTPUT
            echo "is_tag=false" >> $GITHUB_OUTPUT
          fi
          echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            klosowsk/spilo-supabase
            ghcr.io/klosowsk/spilo-supabase
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}},prefix=spilo-v
            type=semver,pattern={{major}}.{{minor}},prefix=spilo-v
            type=raw,value=${{ steps.version.outputs.pg_version }}-${{ steps.version.outputs.short_sha }},enable=${{ steps.version.outputs.is_tag == 'false' }}
            type=raw,value=${{ steps.version.outputs.pg_version }}-latest,enable=${{ steps.version.outputs.is_tag == 'true' }}
            type=raw,value=latest,enable=${{ steps.version.outputs.is_tag == 'true' }}

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and test
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.spilo
          platforms: linux/amd64,linux/arm64
          push: false
          load: false
          tags: spilo-supabase:test
          build-args: |
            PGVERSION=${{ steps.version.outputs.pg_version }}
            SPILO_VERSION=${{ steps.version.outputs.spilo_version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build test image for validation
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.spilo
          platforms: linux/amd64
          push: false
          load: true
          tags: spilo-supabase:test
          build-args: |
            PGVERSION=${{ steps.version.outputs.pg_version }}
            SPILO_VERSION=${{ steps.version.outputs.spilo_version }}

      - name: Test image
        run: |
          echo "=== Verifying image built successfully ==="
          docker images | grep spilo-supabase

          echo "=== Checking PostgreSQL version ==="
          docker run --rm spilo-supabase:test bash -c "postgres --version"

          echo "=== Verifying Supabase extensions are installed ==="
          docker run --rm spilo-supabase:test bash -c "dpkg -l | grep -E 'postgresql-${{ steps.version.outputs.pg_version }}-(pg-net|pgsodium|vault|pg-graphql|supautils|pgvector|pg-tle)'"

          echo "=== Checking migration files ==="
          docker run --rm spilo-supabase:test bash -c "find /supabase-migrations -type f -name '*.sql' | wc -l"

          echo "=== Verifying post_init hook ==="
          docker run --rm spilo-supabase:test bash -c "tail -5 /scripts/post_init.sh"

          echo "=== Checking supabase_post_init.sh script ==="
          docker run --rm spilo-supabase:test bash -c "ls -lah /scripts/supabase_post_init.sh"

      - name: Push to registries
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.spilo
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            PGVERSION=${{ steps.version.outputs.pg_version }}
            SPILO_VERSION=${{ steps.version.outputs.spilo_version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate build summary
        if: github.event_name != 'pull_request'
        run: |
          echo "## ðŸš€ Spilo Supabase Image Built" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**PostgreSQL Version:** ${{ steps.version.outputs.pg_version }}" >> $GITHUB_STEP_SUMMARY
          echo "**Spilo Version:** ${{ steps.version.outputs.spilo_version }}" >> $GITHUB_STEP_SUMMARY
          echo "**Image Tags:**" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
