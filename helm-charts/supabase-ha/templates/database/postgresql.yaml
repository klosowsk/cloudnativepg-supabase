{{- if .Values.postgresql.enabled }}
apiVersion: "acid.zalan.do/v1"
kind: postgresql
metadata:
  name: {{ .Values.global.clusterName }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: supabase
    component: database
    {{- include "supabase-ha.labels" . | nindent 4 }}
  {{- with .Values.postgresql.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  teamId: {{ .Values.postgresql.teamId | quote }}
  version: {{ .Values.postgresql.version | quote }}
  numberOfInstances: {{ .Values.postgresql.numberOfInstances }}

  # Spilo Supabase custom image
  dockerImage: {{ .Values.postgresql.dockerImage }}

  # Pod resources
  resources:
    {{- toYaml .Values.postgresql.resources | nindent 4 }}

  # Storage
  volume:
    size: {{ .Values.postgresql.volume.size }}
    {{- if hasKey .Values.postgresql.volume "storageClass" }}
    storageClass: {{ .Values.postgresql.volume.storageClass | quote }}
    {{- end }}

  # Security context - Run as non-root postgres user
  spiloRunAsUser: {{ .Values.postgresql.spiloRunAsUser | default 101 }}
  spiloRunAsGroup: {{ .Values.postgresql.spiloRunAsGroup | default 103 }}
  spiloFSGroup: {{ .Values.postgresql.spiloFSGroup | default 103 }}

  # Supabase users with appropriate privileges
  # Passwords are auto-generated by the operator and stored in secrets
  users:
    {{- range $user, $privileges := .Values.postgresql.users }}
    {{ $user }}:
      {{- if $privileges }}
      {{- toYaml $privileges | nindent 6 }}
      {{- else }}
      []
      {{- end }}
    {{- end }}

  # Databases
  databases:
    {{- toYaml .Values.postgresql.databases | nindent 4 }}

  # PostgreSQL configuration
  postgresql:
    version: {{ .Values.postgresql.version | quote }}
    parameters:
      {{- toYaml .Values.postgresql.parameters | nindent 6 }}

  # Patroni HA configuration
  patroni:
    {{- toYaml .Values.postgresql.patroni | nindent 4 }}

  {{- if .Values.postgresql.env }}
  # Environment variables for PostgreSQL pods (from secrets)
  env:
    # JWT configuration secret (created by this chart)
    - name: JWT_SECRET
      valueFrom:
        secretKeyRef:
          name: {{ include "supabase-ha.fullname" . }}-jwt-config
          key: JWT_SECRET
    - name: JWT_EXP
      valueFrom:
        secretKeyRef:
          name: {{ include "supabase-ha.fullname" . }}-jwt-config
          key: JWT_EXP
    {{- with .Values.postgresql.env }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- end }}

  {{- if .Values.postgresql.connectionPooler.enabled }}
  # Connection pooler (PgBouncer)
  connectionPooler:
    numberOfInstances: {{ .Values.postgresql.connectionPooler.numberOfInstances }}
    mode: {{ .Values.postgresql.connectionPooler.mode | quote }}
    {{- if .Values.postgresql.connectionPooler.schema }}
    schema: {{ .Values.postgresql.connectionPooler.schema | quote }}
    {{- end }}
    {{- if .Values.postgresql.connectionPooler.user }}
    user: {{ .Values.postgresql.connectionPooler.user | quote }}
    {{- end }}
    {{- if .Values.postgresql.connectionPooler.resources }}
    resources:
      {{- toYaml .Values.postgresql.connectionPooler.resources | nindent 6 }}
    {{- end }}
  {{- end }}

  {{- if .Values.postgresql.sidecars }}
  # Monitoring and other sidecars
  sidecars:
    {{- toYaml .Values.postgresql.sidecars | nindent 4 }}
  {{- end }}

  {{- if .Values.postgresql.backup }}
  # Backup configuration
  {{- toYaml .Values.postgresql.backup | nindent 2 }}
  {{- end }}

  {{- if .Values.postgresql.pgHba }}
  # pg_hba configuration
  patroni:
    pg_hba:
      {{- toYaml .Values.postgresql.pgHba | nindent 6 }}
  {{- end }}
{{- end }}
