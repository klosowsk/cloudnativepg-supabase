---
# ============================================================
# Supabase User Secrets for Zalando Postgres Operator
# ============================================================
#
# These secrets must be created BEFORE deploying the PostgreSQL cluster.
# The operator will detect existing secrets and use them instead of generating random passwords.
#
# Secret naming convention: {username}.{cluster-name}.credentials.postgresql.acid.zalan.do
# Cluster name in this case is: supabase-db
#
# To use a different password:
# 1. Change POSTGRES_PASSWORD below to your desired password
# 2. Run: kubectl apply -f supabase-secrets.yaml
# 3. Then deploy the PostgreSQL cluster
#
# WARNING: For production, use a secrets management solution (e.g., Sealed Secrets, External Secrets)
# ============================================================

apiVersion: v1
kind: Secret
metadata:
  name: supabase-admin.supabase-db.credentials.postgresql.acid.zalan.do
  namespace: supabase
type: Opaque
stringData:
  username: supabase_admin
  password: your-super-secret-and-long-postgres-password  # TODO: Change this!

---
apiVersion: v1
kind: Secret
metadata:
  name: authenticator.supabase-db.credentials.postgresql.acid.zalan.do
  namespace: supabase
type: Opaque
stringData:
  username: authenticator
  password: your-super-secret-and-long-postgres-password  # TODO: Change this!

---
apiVersion: v1
kind: Secret
metadata:
  name: supabase-auth-admin.supabase-db.credentials.postgresql.acid.zalan.do
  namespace: supabase
type: Opaque
stringData:
  username: supabase_auth_admin
  password: your-super-secret-and-long-postgres-password  # TODO: Change this!

---
apiVersion: v1
kind: Secret
metadata:
  name: supabase-storage-admin.supabase-db.credentials.postgresql.acid.zalan.do
  namespace: supabase
type: Opaque
stringData:
  username: supabase_storage_admin
  password: your-super-secret-and-long-postgres-password  # TODO: Change this!

---
apiVersion: v1
kind: Secret
metadata:
  name: supabase-functions-admin.supabase-db.credentials.postgresql.acid.zalan.do
  namespace: supabase
type: Opaque
stringData:
  username: supabase_functions_admin
  password: your-super-secret-and-long-postgres-password  # TODO: Change this!

---
apiVersion: v1
kind: Secret
metadata:
  name: supabase-replication-admin.supabase-db.credentials.postgresql.acid.zalan.do
  namespace: supabase
type: Opaque
stringData:
  username: supabase_replication_admin
  password: your-super-secret-and-long-postgres-password  # TODO: Change this!

---
apiVersion: v1
kind: Secret
metadata:
  name: supabase-read-only-user.supabase-db.credentials.postgresql.acid.zalan.do
  namespace: supabase
type: Opaque
stringData:
  username: supabase_read_only_user
  password: your-super-secret-and-long-postgres-password  # TODO: Change this!

---
# Note: The following roles (anon, authenticated, service_role) are NOLOGIN roles
# and do not need passwords. They are used via SET ROLE from the authenticator role.
# However, if your manifest defines them with LOGIN, you'll need secrets for them too.
#
# Uncomment if needed:
#
# ---
# apiVersion: v1
# kind: Secret
# metadata:
#   name: anon.supabase-db.credentials.postgresql.acid.zalan.do
#   namespace: supabase
# type: Opaque
# stringData:
#   username: anon
#   password: your-super-secret-and-long-postgres-password
#
# ---
# apiVersion: v1
# kind: Secret
# metadata:
#   name: authenticated.supabase-db.credentials.postgresql.acid.zalan.do
#   namespace: supabase
# type: Opaque
# stringData:
#   username: authenticated
#   password: your-super-secret-and-long-postgres-password
#
# ---
# apiVersion: v1
# kind: Secret
# metadata:
#   name: service-role.supabase-db.credentials.postgresql.acid.zalan.do
#   namespace: supabase
# type: Opaque
# stringData:
#   username: service_role
#   password: your-super-secret-and-long-postgres-password

---
# ============================================================
# JWT Configuration Secret
# ============================================================
# Used by PostgREST, Auth, and other services for JWT token signing/verification
# This secret is consumed by the PostgreSQL cluster via pod_environment_secret

apiVersion: v1
kind: Secret
metadata:
  name: supabase-jwt-config
  namespace: supabase
type: Opaque
stringData:
  JWT_SECRET: super-secret-jwt-token-with-at-least-32-characters-long  # TODO: Change this!
  JWT_EXP: "3600"  # Token expiration in seconds (1 hour)
