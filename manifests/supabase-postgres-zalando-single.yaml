# ============================================================
# EXAMPLE TEMPLATE - Development (1 node)
# ============================================================
# NO HIGH AVAILABILITY - For development/testing only
#
# Customize for your environment:
#   - dockerImage (if using custom registry)
#   - storageClass
#   - Backups are optional for dev environments
# ============================================================

apiVersion: "acid.zalan.do/v1"
kind: postgresql
metadata:
  name: supabase-db
  namespace: supabase  # TODO: Change if using different namespace
  labels:
    app: supabase
    component: database
spec:
  teamId: "supabase"
  version: "17"
  numberOfInstances: 1  # No HA

  # Spilo Supabase image
  dockerImage: klosowsk/spilo-supabase:17-latest  # TODO: Change to your registry if needed

  # Resources per pod
  resources:
    requests:
      cpu: 250m
      memory: 512Mi
    limits:
      cpu: 500m
      memory: 1Gi

  # Storage
  volume:
    size: 10Gi                # TODO: Adjust size for your data
    storageClass: standard    # TODO: Change to your storage class

  # Security context - Run as non-root postgres user
  # This fixes volume permission issues
  spiloRunAsUser: 101      # postgres user UID
  spiloRunAsGroup: 103     # postgres group GID
  spiloFSGroup: 103        # Volume group ownership (makes volumes writable)

  # Supabase roles (auto-created by operator)
  users:
    supabase_admin:
      - superuser
      - createdb
      - createrole
      - replication
      - bypassrls
    service_role:
      - bypassrls
    authenticator: []
    supabase_auth_admin:
      - createrole
    supabase_storage_admin:
      - createrole
    supabase_functions_admin:
      - createrole
    supabase_replication_admin:
      - replication
    supabase_read_only_user:
      - bypassrls
    anon: []
    authenticated: []

  databases:
    postgres: supabase_admin

  # PostgreSQL configuration
  postgresql:
    version: "17"
    parameters:
      # Required: Supabase extensions
      shared_preload_libraries: "timescaledb,pgsodium,pg_cron,pg_net,pg_stat_statements,auto_explain,pg_wait_sampling,pg_tle,plan_filter"
      cron.database_name: "postgres"
      wal_level: "logical"

      # Minimal performance tuning for dev
      max_connections: "50"
      shared_buffers: "128MB"
      effective_cache_size: "384MB"
      work_mem: "4MB"

  # Patroni configuration
  patroni:
    initdb:
      encoding: "UTF8"
      locale: "en_US.UTF-8"
      data-checksums: "true"

  # Environment variables for PostgreSQL pods (from secrets)
  # These are available during initialization (for JWT config) and at runtime
  env:
    - name: JWT_SECRET
      valueFrom:
        secretKeyRef:
          name: supabase-jwt-config
          key: JWT_SECRET
    - name: JWT_EXP
      valueFrom:
        secretKeyRef:
          name: supabase-jwt-config
          key: JWT_EXP

  # Optional: Connection pooler (can be disabled for dev)
  connectionPooler:
    numberOfInstances: 1
    mode: "transaction"
    resources:
      requests:
        cpu: 50m
        memory: 50Mi
      limits:
        cpu: 100m
        memory: 100Mi
